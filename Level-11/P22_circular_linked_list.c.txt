// 22.Program to implement circular linked lists

#include <stdio.h>
#include <stdlib.h>

struct node 
{
    int data;
    struct node* next;
};

struct node *head = NULL;  
struct node *tail = NULL; 

void insert(int data);
void display();

int main() 
{
    int ch, data;
    while(1) 
    {
        printf("\n1. Insert\n");
        printf("2. Display\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &ch);

        switch(ch) 
        {
            case 1:printf("Enter data to insert: ");
                   scanf("%d", &data);
                   insert(data);
                   break;
            case 2:display();
                   break;
            case 3:printf("Exiting program.\n");
                   exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}

void insert(int data)
{  
    struct node *newNode = (struct node*)malloc(sizeof(struct node));  
    newNode->data = data;  
    if(head == NULL)
	{  
        head = newNode;  
        tail = newNode;  
        newNode->next = head;  
    }
	else
	 {  
        tail->next = newNode;   
        tail = newNode;  
        tail->next = head;  
    }  
}  
void display()
{  
    struct node *current = head;  
    if(head == NULL)
	{  
        printf("List is empty");  
    }  
    else
	{  
        printf("Nodes of the circular linked list: \n");  
         do
		 {  
            printf("%d ", current->data);  
            current = current->next;  
        }while(current != head);  
        printf("\n");  
    }  
}  