// 23.strcspn - get the length of a complementary substring

#include <stdio.h>
#include <string.h>
#define N 100

int my_strcspn_recursive(const char str1[], const char str2[], int i, int j) 
{
    if(str1[i] == '\0') 
    { 
        return i; 
    }
    
    if(str2[j] == '\0') 
    { 
        return my_strcspn_recursive(str1, str2, i + 1, 0);
    }
    
    if(str1[i] == str2[j]) 
    { 
        return i;
    }
    
    return my_strcspn_recursive(str1, str2, i, j + 1); 
}

int my_strcspn(const char str1[], const char str2[]) 
{
    return my_strcspn_recursive(str1, str2, 0, 0); 
}

int main() 
{
    char str1[N], str2[N];
    printf("Enter string 1: ");
    fgets(str1, N, stdin);
    printf("Enter string 2: ");
    fgets(str2, N, stdin);
    int length = my_strcspn(str1, str2);
    printf("Length of unmatched characters: %d\n", length);
    return 0;
}
