// 15.Program to implement Max-Heap

#include<stdio.h>

void swap(int *x, int *y) 
{
    int temp = *x;
    *x = *y;
    *y = temp;
}

void max_heap(int arr[], int n, int i) 
{
    int largest = i;
    int left_child = 2 * i + 1;
    int right_child = 2 * i + 2;

    if(left_child < n && arr[left_child] > arr[largest])
        largest = left_child;

    if(right_child < n && arr[right_child] > arr[largest])
        largest = right_child;

    if(largest != i) 
    {
        swap(&arr[i], &arr[largest]);
        max_heap(arr, n, largest);
    }
}

void build_max_heap(int arr[], int n) 
{
    for(int i = n / 2 - 1; i >= 0; i--) 
    {
        max_heap(arr, n, i);
    }
}

int main() 
{
    int n,i;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);

    int arr[100];

    printf("Enter %d elements: ", n);
    for(i = 0; i < n; i++) 
    {
        scanf("%d", &arr[i]);
    }

    build_max_heap(arr, n);

    printf("Max Heap:\n");
    for(i = 0; i < n; i++) 
    {
        printf("%d ", arr[i]);
    }

    return 0;
}
