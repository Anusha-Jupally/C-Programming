// 14.Program to implement Min-Heap

#include<stdio.h>

void swap(int *x, int *y) 
{
    int temp = *x;
    *x = *y;
    *y = temp;
}

void min_heap(int arr[], int n, int i) 
{
    int smallest = i;
    int left_child = 2 * i + 1;
    int right_child = 2 * i + 2;

    if(left_child < n && arr[left_child] < arr[smallest])
        smallest = left_child;

    if(right_child < n && arr[right_child] < arr[smallest])
        smallest = right_child;

    if(smallest != i) 
    {
        swap(&arr[i], &arr[smallest]);
        min_heap(arr, n, smallest);
    }
}

void build_min_heap(int arr[], int n) 
{
    for(int i = n / 2 - 1; i >= 0; i--) 
    {
        min_heap(arr, n, i);
    }
}

int main() 
{
    int n,i;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);

    int arr[100];

    printf("Enter %d elements: ", n);
    for(i = 0; i < n; i++) 
    {
        scanf("%d", &arr[i]);
    }

    build_min_heap(arr, n);

    printf("Min Heap:\n");
    for(i = 0; i < n; i++) 
    {
        printf("%d ", arr[i]);
    }

    return 0;
}
