// 11.strcasestr - find a substring

#include<stdio.h>
#include<string.h>
#define N 50 

char *my_strcasestr_recursive(char *str1, char *str2) 
{
    if(*str1 == '\0')
        return NULL; 

    if((*str1 == *str2) || (*str1 == *str2 - 32) || (*str1 == *str2 + 32)) 
    {
        char *s1 = str1;
        char *s2 = str2;
        while(*s2 != '\0' && (*s1 == *s2 || *s1 == *s2 - 32 || *s1 == *s2 + 32)) 
        {
            s1++;
            s2++;
        }
        
        if (*s2 == '\0')
            return str1;
    }
    
    return my_strcasestr_recursive(str1 + 1, str2);
}

int main() 
{
    char str1[N], str2[N];
    printf("Enter string1 : ");
    fgets(str1, N, stdin);
    printf("Enter string2 : ");
    fgets(str2, N, stdin);
    str1[strcspn(str1, "\n")] = '\0';
    str2[strcspn(str2, "\n")] = '\0';

    char *ptr = my_strcasestr_recursive(str1, str2);
    if(ptr == NULL)
        printf("String not found\n");
    else 
        printf("Substring found at index: %ld\n", ptr - str1);

    return 0;
}
